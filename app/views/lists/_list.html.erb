<script>
// must send csrf token every time to stay logged in
$.ajaxSetup({
  beforeSend: function(xhr) {
    xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'));
  }
}); 

$(function(){
    $('.stickyNote.list')
        // send updated position to server
        .draggable({
            stop: function(e, ui) {
                console.log("dragged", $(this));
                $.ajax({
                    url: '/lists/' + $(this).attr('data-listId'),
                    type: 'PUT',
                    data: { _method:'PUT', x: $(this).position().left, y: $(this).position().top,
                        width: $(this).width(), height: $(this).height()},
                    dataType: 'json',
                    success: function(data) {
                        //alert('put sent');
                  }
                });
            }
        })
        // send updated size to server
        .resizable({
            stop: function(e, ui) {
                $.ajax({
                    url: '/lists/' + $(this).attr('data-listId'),
                    type: 'PUT',
                    data: { _method:'PUT', x: $(this).position().left, y: $(this).position().top,
                        width: $(this).width(), height: $(this).height()},
                    dataType: 'json',
                    success: function(data) {
                        //alert('put sent');
                  }
                });
            }
        });

/*        // send updated text to server
        var contents = $('.textarea').html();
        $('.textarea').blur(function() {
            if (contents!=$(this).html()){
                console.log('contents changed');
                content = $(this).html();
                var id = $(this).parent().attr('data-noteId');
                var position = $(this).parent().position();
                $.ajax({
                    url: '/notes/' + id,
                    type: 'PUT',
                    data: { _method:'PUT', x: position.left, y: position.top,
                        width: $(this).parent().width(), height: $(this).parent().height(), body: content },
                    dataType: 'json',
                    success: function(data) {
                        //alert('put sent');
                  }
                });
            }
        });*/

        $(function(){
            console.log('page loaded');
            // for loop through lists on page and add handlers?
        });

        // modified from: http://www.buildfortheweb.com/2010/11/25/create-a-to-do-list-with-jquery/
        add_task = function(event) {
            console.log('add_task clicked', event);
            console.log('this', $(this));
            var list = $(event.target).parent().parent();
            var list_id = list.attr('data-listId');
            console.log('list id', list_id);

            var taskDescription = $('.description').html();
            if (taskDescription == "") {
                return false;
            }

            $('.task_list').append('<div class="task">'
                + '<span>'
                    + '<input type="checkbox" class="check_task" name="check_task"/>'
                + '</span>'
                + '<span class="task_description">'
                    + taskDescription
                + '</span>'
                + '<span class="delete_task" style="float:right;cursor: pointer;"><a>X</a></span>'
            + '</div>');
            
            // put space in description as filler
            $('.description').html("");
            
            // save task in model
            $.ajax({
                url: '/create_task/' + list_id,
                type: 'POST',
                data: { _method:'POST', body:taskDescription, complete:false },
                dataType: 'json',
                success: function(data) {
                    //alert('put sent');
              }
            });

            $('.check_task').unbind('click');
            $('.check_task').click( function() {
                var task = $(this).parent().parent();
                var description = task.children('.task_description').html();
                task.toggleClass('checked');
                // mark task as complete
                if (task.hasClass('.checked')) {
                    task.children('.task_description').css('text-decoration', 'line-through');
                    $.ajax({
                        url: '/tasks/' + task.attr('data-taskId'),
                        type: 'PUT',
                        data: { _method:'PUT', body: description, complete: true},
                        dataType: 'json',
                        success: function(data) {
                            //alert('put sent');
                      }
                    });
                } else {
                    // mark task as not complete
                    task.children('.task_description').css('text-decoration', 'none');
                    $.ajax({
                        url: '/tasks/' + task.attr('data-taskId'),
                        type: 'PUT',
                        data: { _method:'PUT', body: description, complete: false},
                        dataType: 'json',
                        success: function(data) {
                            //alert('put sent');
                      }
                    });
                }
            });

            $('.delete_task').click( function(event) {
                $(this).parent().remove();
            });
            return false;
        }

        $('.description').unbind('keypress').keypress( function(event) {
            console.log('keypress', event);
            if (event.keyCode == 13) {
                console.log("add task keypress");
                //event.stopPropagation();
                event.preventDefault();
                add_task(event);
            }
        });
        $('.add_task').unbind('click').click( function(event) {
            add_task(event); 
        });  
        

});

</script>
<% if list%>
<div class="stickyNote list" data-listId="<%= list.id %>" style="position:absolute; top:<%=list.y%>px; left:<%=list.x%>px; width:<%=list.width%>px; height:<%=list.height%>px">
    <span class="delete_list" style="float:right;"> <%= link_to 'X', list, method: :delete, :remote => true, data: { confirm: 'Are you sure?' } %> </span>
        
        <div class="enter_task">
                <div class="description" contenteditable="true" style="background-color: white; border: 1px solid;"></div>
                <button type="button" class="add_task">Add</button>
        </div>
        <div class="task_list">
            <%list.tasks.each do |task|%>
            <% if !task.complete%>
                <div class="task" data-taskId="<%= task.id %>">
                    <span><input type="checkbox" class="check_task" name="check_task"/></span>
                    <span class="task_description" > <%=raw task.body%></span>
                    <span class="delete_task" style="float:right;"><%= link_to 'X', task, method: :delete, :remote => true, data: { confirm: 'Are you sure?' } %></span>
                </div>
            <% else %>
                <div class="task checked" data-taskId="<%= task.id %>">
                    <span><input type="checkbox" class="check_task" name="check_task" checked/></span>
                    <span class="task_description" style="text-decoration:line-through;" > <%=raw task.body%></span>
                    <span class="delete_task" style="float:right;cursor: pointer;"><a>X</a></span>
                </div>
            <% end %>
            <% end %>
        </div> 

</div>
<% end %>